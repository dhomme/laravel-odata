<?php

class $NAME$ extends \BaseController {

	/**
	 * Display a listing of $COLLECTION$
	 *
	 * @return Response
	 */
	public function index()
	{
		$$COLLECTION$ = $MODEL$::all();

		$$COLLECTION$ = array(
			'@odata.context' => Config::get('app.url').'/$metadata#'.ucfirst('$COLLECTION$'),
			'value' => $$COLLECTION$
		);

		$response = Response::make($$COLLECTION$, 200);
		$response->header('OData-Version', '4.0');

    	return $response;
	}

	/**
	 * Store a newly created $RESOURCE$ in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		$response = null;

		$validator = Validator::make($data = Input::all(), $MODEL$::$rules);

		if ($validator->fails()) {
			$response = Response::make(NULL, 500);
		}
		else{
			$data = $MODEL$::create($data);
			$response = Response::make($data, 201);
			$response->header('Location', Config::get('app.url').'/'.ucfirst('$COLLECTION$').'/'.$data->id);
		}

		$response->header('OData-Version', '4.0');
		return $response;
	}

	/**
	 * Display the specified $RESOURCE$.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		$response = null;

		$$RESOURCE$ = $MODEL$::find($id);

		if (empty($$RESOURCE$)) {
			$response = Response::make(NULL, 404);
		} else {
			$data = array(
				'@odata.context' => Config::get('app.url') . '/$metadata#' . ucfirst('$COLLECTION$') . '/$entity',
				'value' => $$RESOURCE$
			);
			$response = Response::make($data, 200);
		}

		$response->header('OData-Version', '4.0');
		return $response;
	}

	/**
	 * Update the specified $RESOURCE$ in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$response = null;

		$$RESOURCE$ = $MODEL$::find($id);

		if (empty($$RESOURCE$)) {
			$response = Response::make(NULL, 404);
		} else {
			$validator = Validator::make($data = Input::all(), $MODEL$::$rules);

			if ($validator->fails())
			{
				$response = Response::make(NULL, 500);
			}

			$$RESOURCE$->update($data);
			$response = Response::make(NULL, 204);
		}

		$response->header('OData-Version', '4.0');
		return $response;
	}

	/**
	 * Remove the specified $RESOURCE$ from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		$response = null;

		$$RESOURCE$ = $MODEL$::find($id);
		if (empty($$RESOURCE$)) {
			$response = Response::make(NULL, 404);
		} else {
			$MODEL$::destroy($id);
			$response = Response::make(NULL, 204);
		}

		$response->header('OData-Version', '4.0');
		return $response;
	}

}
